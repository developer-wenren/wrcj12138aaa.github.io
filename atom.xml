<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://wrcj12138aaa.github.io/</id>
    <title>闻人的技术博客</title>
    <updated>2019-11-23T15:16:41.532Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://wrcj12138aaa.github.io/"/>
    <link rel="self" href="https://wrcj12138aaa.github.io//atom.xml"/>
    <subtitle>做一个终生学习的技术人</subtitle>
    <logo>https://wrcj12138aaa.github.io//images/avatar.png</logo>
    <icon>https://wrcj12138aaa.github.io//favicon.ico</icon>
    <rights>All rights reserved 2019, 闻人的技术博客</rights>
    <entry>
        <title type="html"><![CDATA[关于中台那些事]]></title>
        <id>https://wrcj12138aaa.github.io//post/shuo-tou-zhong-tai-xue-xi-bi-ji-w</id>
        <link href="https://wrcj12138aaa.github.io//post/shuo-tou-zhong-tai-xue-xi-bi-ji-w">
        </link>
        <updated>2019-11-23T15:01:47.000Z</updated>
        <summary type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>本文为极客时间专栏《说透中台》的学习笔记。</p>
]]></summary>
        <content type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>本文为极客时间专栏《说透中台》的学习笔记。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何做好网上阅读和读书积累]]></title>
        <id>https://wrcj12138aaa.github.io//post/ru-he-zuo-hao-yue-du-he-ji-lei</id>
        <link href="https://wrcj12138aaa.github.io//post/ru-he-zuo-hao-yue-du-he-ji-lei">
        </link>
        <updated>2019-11-17T03:46:15.000Z</updated>
        <summary type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>本文是《万万没想到：用理工科思维理解世界》一书中关于如何网上阅读和读书的几节内容小结，记录下帮助自己能有效地阅读和学习，在平时生活中实践改进来贴合自己实际情况。</p>
]]></summary>
        <content type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>本文是《万万没想到：用理工科思维理解世界》一书中关于如何网上阅读和读书的几节内容小结，记录下帮助自己能有效地阅读和学习，在平时生活中实践改进来贴合自己实际情况。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[一览 Java并发编程实战（极客时间）]]></title>
        <id>https://wrcj12138aaa.github.io//post/yi-lan-java-bing-fa-bian-cheng-shi-zhan-ji-ke-shi-jian</id>
        <link href="https://wrcj12138aaa.github.io//post/yi-lan-java-bing-fa-bian-cheng-shi-zhan-ji-ke-shi-jian">
        </link>
        <updated>2019-11-08T13:44:50.000Z</updated>
        <summary type="html"><![CDATA[<p>Java 开发中并发编程算是复杂而又重要的一块了，掌握基础的并发知识和解决并发场景中所可能遇到的问题，很有必要，本文是对极客时间专栏《Java并发编程实战》的学习总结。</p>
]]></summary>
        <content type="html"><![CDATA[<p>Java 开发中并发编程算是复杂而又重要的一块了，掌握基础的并发知识和解决并发场景中所可能遇到的问题，很有必要，本文是对极客时间专栏《Java并发编程实战》的学习总结。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[掌握设计模式之策略模式]]></title>
        <id>https://wrcj12138aaa.github.io//post/zhang-wo-she-ji-mo-shi-zhi-ce-lue-mo-shi</id>
        <link href="https://wrcj12138aaa.github.io//post/zhang-wo-she-ji-mo-shi-zhi-ce-lue-mo-shi">
        </link>
        <updated>2019-10-27T07:12:31.000Z</updated>
        <summary type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>最近段时间，接到一个需求：开发一个聚合支付服务，对其他内部项目提供统一的接口来实现不同支付平台的支付能力发起，比如支付宝，微信，银联等。为了处理相似的支付操作而各平台具体实现不同的情况，要让各个平台接口能力能相互独立，并要方便扩展后续新增的支付平台，我引入了设计模式的策略模式来应对需求场景，借此深入学习总结下策略模式，于是也就有了本文，希望对学习策略模式的同学有所帮助。</p>
]]></summary>
        <content type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>最近段时间，接到一个需求：开发一个聚合支付服务，对其他内部项目提供统一的接口来实现不同支付平台的支付能力发起，比如支付宝，微信，银联等。为了处理相似的支付操作而各平台具体实现不同的情况，要让各个平台接口能力能相互独立，并要方便扩展后续新增的支付平台，我引入了设计模式的策略模式来应对需求场景，借此深入学习总结下策略模式，于是也就有了本文，希望对学习策略模式的同学有所帮助。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Java 单元测试之 Junit5 快速上手]]></title>
        <id>https://wrcj12138aaa.github.io//post/java-dan-yuan-ce-shi-zhi-junit5-kuai-su-shang-shou</id>
        <link href="https://wrcj12138aaa.github.io//post/java-dan-yuan-ce-shi-zhi-junit5-kuai-su-shang-shou">
        </link>
        <updated>2019-09-15T13:30:35.000Z</updated>
        <summary type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>单元测试是软件开发中必不可少的一环，但是在平常开发中往往因为项目周期紧，工作量大而被选择忽略，这样往往导致软件问题层出不穷。线上出现的不少问题其实在有单元测试的情况下就可以及时发现和处理，因此培养自己在日常开发中写单元测试的能力是很有必要的。无论是对自己的编码能力的提高，还是项目质量的提升，都是大有好处，本文将介绍 Java 单元测试框架 JUnit 5 的基础认识和使用来编写单元测试，希望同样对你有所帮助。</p>
]]></summary>
        <content type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>单元测试是软件开发中必不可少的一环，但是在平常开发中往往因为项目周期紧，工作量大而被选择忽略，这样往往导致软件问题层出不穷。线上出现的不少问题其实在有单元测试的情况下就可以及时发现和处理，因此培养自己在日常开发中写单元测试的能力是很有必要的。无论是对自己的编码能力的提高，还是项目质量的提升，都是大有好处，本文将介绍 Java 单元测试框架 JUnit 5 的基础认识和使用来编写单元测试，希望同样对你有所帮助。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[除了FastJson,你还有选择：Gson简易指南]]></title>
        <id>https://wrcj12138aaa.github.io//post/chu-liao-fastjsonni-huan-you-xuan-ze-gson-jian-yi-zhi-nan</id>
        <link href="https://wrcj12138aaa.github.io//post/chu-liao-fastjsonni-huan-you-xuan-ze-gson-jian-yi-zhi-nan">
        </link>
        <updated>2019-09-08T02:48:09.000Z</updated>
        <summary type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>这个周末被几个技术博主的同一篇公众号文章  <a href="https://mp.weixin.qq.com/s/yVzZTTR5R6QbspTg5WI5hg">fastjson又被发现漏洞，这次危害可导致服务瘫痪！</a> 刷屏，离之前漏洞事件没多久，fastjson 又出现严重 Bug。目前项目中不少使用了 fastjson 做对象与JSON数据的转换，又需要更新版本重新部署，可以说是费时费力。与此同时，也带给我新的思考，面对大量功能强大的开源库，我们不能盲目地引入到项目之中，众多开源框架中某个不稳定因素就足以让一个项目遭受灭顶之灾。趁着周末，在家学习下同样具备JSON与对象转换功能的优秀开源框架 Gson，并且打算将今后项目使用 fastjson 的地方逐渐换成使用 Gson，记录下学习总结的内容，希望对小伙伴也有所帮助。</p>
]]></summary>
        <content type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>这个周末被几个技术博主的同一篇公众号文章  <a href="https://mp.weixin.qq.com/s/yVzZTTR5R6QbspTg5WI5hg">fastjson又被发现漏洞，这次危害可导致服务瘫痪！</a> 刷屏，离之前漏洞事件没多久，fastjson 又出现严重 Bug。目前项目中不少使用了 fastjson 做对象与JSON数据的转换，又需要更新版本重新部署，可以说是费时费力。与此同时，也带给我新的思考，面对大量功能强大的开源库，我们不能盲目地引入到项目之中，众多开源框架中某个不稳定因素就足以让一个项目遭受灭顶之灾。趁着周末，在家学习下同样具备JSON与对象转换功能的优秀开源框架 Gson，并且打算将今后项目使用 fastjson 的地方逐渐换成使用 Gson，记录下学习总结的内容，希望对小伙伴也有所帮助。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ArrayList的全面突击]]></title>
        <id>https://wrcj12138aaa.github.io//post/arraylist-de-quan-mian-tu-ji</id>
        <link href="https://wrcj12138aaa.github.io//post/arraylist-de-quan-mian-tu-ji">
        </link>
        <updated>2019-09-01T14:44:20.000Z</updated>
        <summary type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>ArrayList 作为 Java 集合框架中最常用的类，在一般情况下，用它存储集合数据最适合不过。知其然知其所以然，为了能更好地认识和使用 ArrayList，本文将从下面几方面深入理解 ArrayList：</p>
<ul>
<li>为什么不用数组，用 ArrayList</li>
<li>ArrayList 特性的源码分析</li>
<li>Java 8 后 的 ArrayList</li>
<li>正确的 ArrayList 使用姿势</li>
</ul>
]]></summary>
        <content type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>ArrayList 作为 Java 集合框架中最常用的类，在一般情况下，用它存储集合数据最适合不过。知其然知其所以然，为了能更好地认识和使用 ArrayList，本文将从下面几方面深入理解 ArrayList：</p>
<ul>
<li>为什么不用数组，用 ArrayList</li>
<li>ArrayList 特性的源码分析</li>
<li>Java 8 后 的 ArrayList</li>
<li>正确的 ArrayList 使用姿势</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[掌握 Maven 私服]]></title>
        <id>https://wrcj12138aaa.github.io//post/20190825-掌握 Maven 私服</id>
        <link href="https://wrcj12138aaa.github.io//post/20190825-掌握 Maven 私服">
        </link>
        <updated>2019-08-25T13:30:20.000Z</updated>
        <summary type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>在 Java EE 开发中，我们使用 Maven 构建工具主要来管理项目的第三方库的依赖，以及公司内部其他项目服务的依赖，而 Maven 私服就是必不可少的一环，本文主要对 Maven 私服的三大方面进行介绍：</p>
<ul>
<li>什么是 Maven 私服</li>
<li>如何搭建 Maven 私服</li>
<li>如何使用 Maven 私服</li>
</ul>
<blockquote>
<p>本文面对的读者应有 Maven 使用经验，了解 Maven 的一些基本概念，如果不太熟悉可以参见文末的参考资料学习。</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>在 Java EE 开发中，我们使用 Maven 构建工具主要来管理项目的第三方库的依赖，以及公司内部其他项目服务的依赖，而 Maven 私服就是必不可少的一环，本文主要对 Maven 私服的三大方面进行介绍：</p>
<ul>
<li>什么是 Maven 私服</li>
<li>如何搭建 Maven 私服</li>
<li>如何使用 Maven 私服</li>
</ul>
<blockquote>
<p>本文面对的读者应有 Maven 使用经验，了解 Maven 的一些基本概念，如果不太熟悉可以参见文末的参考资料学习。</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[聊一聊 Java 字符串的不可变]]></title>
        <id>https://wrcj12138aaa.github.io//post/20190817-聊一聊 Java 字符串的不可变</id>
        <link href="https://wrcj12138aaa.github.io//post/20190817-聊一聊 Java 字符串的不可变">
        </link>
        <updated>2019-08-17T13:13:20.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[Spring Boot Profiles 源码解析]]></title>
        <id>https://wrcj12138aaa.github.io//post/20190813-SpringBootProfiles源码解析</id>
        <link href="https://wrcj12138aaa.github.io//post/20190813-SpringBootProfiles源码解析">
        </link>
        <updated>2019-08-13T13:13:20.000Z</updated>
    </entry>
</feed>